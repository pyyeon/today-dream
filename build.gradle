plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2' // 최신 버전으로 변경할 수 있습니다
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2' // 최신 버전으로 변경할 수 있습니다
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.google.code.gson:gson'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'mysql:mysql-connector-java'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0' // 추가
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5' // 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' // 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}



tasks.named('javadoc') {
	source = sourceSets.main.allJava
	options.memberLevel = JavadocMemberLevel.PRIVATE
	destinationDir = file("build/docs/javadoc")
}
